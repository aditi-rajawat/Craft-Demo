<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2016-09-21T12:18:53Z</updated>
  <entry>
    <title>Spring Framework 5.0 M2 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/21/spring-framework-5-0-m2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Juergen Hoeller</name>
    </author>
    <id>tag:spring.io,2016-09-21:2628</id>
    <updated>2016-09-21T12:18:53Z</updated>
    <content type="html">&lt;p&gt;Dear Spring community,&lt;/p&gt;
&lt;p&gt;It is my pleasure to announce that the second Spring Framework 5.0 milestone is available now: Check &lt;a href="http://projects.spring.io/spring-framework/"&gt;http://projects.spring.io/spring-framework/&lt;/a&gt; for how to obtain it from our milestone repository, and keep your feedback coming!&lt;/p&gt;
&lt;p&gt;This release introduces a functional web endpoint variant, based on the same foundation as our reactive &lt;code&gt;@Controller&lt;/code&gt; model (introduced in 5.0 M1). Stay tuned for Arjen&amp;rsquo;s dedicated blog post, coming up tomorrow! Here&amp;rsquo;s a teaser&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;RouterFunction&amp;lt;String&amp;gt; route =&#xD;
    route(GET(&amp;quot;/hello-world&amp;quot;),&#xD;
        request -&amp;gt; Response.ok().body(fromObject(&amp;quot;Hello World&amp;quot;)));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On our mission towards Java 9, this is also our first framework version to allow for building on JDK 9 out of the box, including the entire test suite. We run on JDK 8 by default but you may simply switch &lt;code&gt;JAVA_HOME&lt;/code&gt; to a JDK 9 installation instead.&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br/&gt;Juergen&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 1.4.1 and 1.3.8 Available Now</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/21/spring-boot-1-4-1-and-1-3-8-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2016-09-21:2627</id>
    <updated>2016-09-21T08:57:00Z</updated>
    <content type="html">&lt;p&gt;It is my pleasure to announce that Spring Boot &lt;code&gt;1.4.1&lt;/code&gt; and &lt;code&gt;1.3.8&lt;/code&gt; haven been released and are available now from &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.springframework.boot%22"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Spring Boot 1.3.8 includes &lt;a href="https://github.com/spring-projects/spring-boot/milestone/71?closed=1"&gt;35 fixes and a selection of improvements and dependency upgrades&lt;/a&gt;. The first maintenance release of the 1.4 line contains &lt;a href="https://github.com/spring-projects/spring-boot/milestone/72?closed=1"&gt;over 150 fixes, improvements and 3rd party dependency updates&lt;/a&gt;! Thanks to all that have contributed!&lt;/p&gt;&lt;h3&gt;&lt;a href="#what-rsquo-s-new" class="anchor" name="what-rsquo-s-new"&gt;&lt;/a&gt;What&amp;rsquo;s new?&lt;/h3&gt;
&lt;p&gt;We snuck in a few major improvements such as a new &lt;code&gt;FailureAnalyzer&lt;/code&gt; for &lt;code&gt;NoSuchBeanDefinitionException&lt;/code&gt;. If your code expects a bean to be present (typically via auto-configuration), you should now get a nice error message if it isn&amp;rsquo;t:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;***************************&#xD;
APPLICATION FAILED TO START&#xD;
***************************&#xD;
&#xD;
Description:&#xD;
&#xD;
Parameter 0 of constructor in com.example.JdbcStore required a bean of type &amp;#39;org.springframework.jdbc.core.JdbcTemplate&amp;#39; that could not be found.&#xD;
	- Bean method &amp;#39;jdbcTemplate&amp;#39; not loaded because @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans&#xD;
&#xD;
&#xD;
Action:&#xD;
&#xD;
Consider revisiting the conditions above or defining a bean of type &amp;#39;org.springframework.jdbc.core.JdbcTemplate&amp;#39; in your configuration.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Based on your feedback, we&amp;rsquo;ve also refined the new testing support that was introduced in 1.4. Changes include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;@MockBean&lt;/code&gt; and &lt;code&gt;@Qualifier&lt;/code&gt; can now be used together.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TestRestTemplate&lt;/code&gt; now uses your &lt;code&gt;server.*&lt;/code&gt; properties to automatically use SSL or the configured context path.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;@MockBean&lt;/code&gt; can now be used to mock a bean with a parameterized type.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#what-rsquo-s-next" class="anchor" name="what-rsquo-s-next"&gt;&lt;/a&gt;What&amp;rsquo;s next?&lt;/h3&gt;
&lt;p&gt;The team is now working on the next two releases.&lt;/p&gt;
&lt;p&gt;1.5 will have a shorter release cycle and is scheduled for late this year. It will primarily address PRs that couldn&amp;rsquo;t be processed in time for 1.4 and include some minor dependency upgrades. &lt;/p&gt;
&lt;p&gt;2.0 will integrate Spring Framework 5 and provide auto-configuration for the new reactive infrastructure. Note that, like Spring Framework 5, Spring Boot 2.0 will require Java 8.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask at &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 20, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/20/this-week-in-spring-september-20-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-09-20:2625</id>
    <updated>2016-09-20T10:34:00Z</updated>
    <content type="html">&lt;p&gt;Hello world! Since we last talked, I&amp;rsquo;ve been in multiple cities in China, including Hangzhou, Shanghai, Beijing, Guangzhou, Shenzhen and Hong Kong, talking to customers and community members alike. It&amp;rsquo;s fascinating to see what our amazing customers in China do with our technologies in the hypercompetitive Chinese market. And, tasty! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Cloud Camden is almost here! Spring Cloud co-founder Spencer Gibb just announced Spring Cloud Camden RC1, which in turn includes a lot &lt;a href="https://spring.io/blog/2016/09/14/spring-cloud-camden-rc1-is-available"&gt;of improvements and a really cool new module, Spring Cloud Contract&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring for Apache Kafka lead Artem Bilan just announced &lt;a href="https://spring.io/blog/2016/09/19/spring-for-apache-kafka-1-1-ga-and-spring-integration-kafka-2-1-ga-are-available"&gt;that Spring for Apache Kafka 1.1 GA and Spring Integration Kafka 2.1 GA are now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Integration ninja Artem Bilan has &lt;em&gt;also&lt;/em&gt; &lt;a href="https://spring.io/blog/2016/09/19/spring-integration-4-3-2-is-available"&gt;just announced that Spring Integration 4.3.2 has just been released&lt;/a&gt;, with polish around the RMI adapters, TCP, and a few new global tweaks like &lt;code&gt;spring.integration.readOnly.headers&lt;/code&gt; global property. This is a small but worthy update on the journey to Spring Integration 5.0, with a milestone due in a month&amp;rsquo;s time!&lt;/li&gt;
  &lt;li&gt;Spring framework ninja Stéphane Nicoll &lt;a href="https://spring.io/blog/2016/09/19/spring-framework-4-3-3-and-4-2-8-available-now"&gt;has just announced Spring framework 4.3.3 and 4.2.8 are now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Data Flow ninja Thomas Risberg just &lt;a href="https://spring.io/blog/2016/09/16/spring-cloud-data-flow-1-1-m1-and-1-0-1-ga-released"&gt;announced Spring Cloud Data Flow 1.1 M1 and 1.0.1 GA&lt;/a&gt;! The 1.1 M1, in particular, is &lt;em&gt;very&lt;/em&gt; exciting! It adds LDAP backend support, HTTP BASIC backend authentication, file backend authentication, Spring Boot 1.3 and 1.4 support, UI improvements, and a slew of other niceties.&lt;/li&gt;
  &lt;li&gt;Never one to relax, Spring Integration Java DSL lead Artem Bilan &lt;em&gt;also&lt;/em&gt; &lt;a href="https://spring.io/blog/2016/09/15/java-dsl-for-spring-integration-1-2-milestone-2-is-available"&gt;just announced 1.2 M2&lt;/a&gt;, which includes JPA support, mid-flow transaction support, scatter-gather support, improved routers, and more!&lt;/li&gt;
  &lt;li&gt;Spring Security and Spring Session lead Rob Winch just announced Spring Session 1.3.0 M2 which is packed with first class support for Hazelcast, support for Spring Security concurrent session management, a Redis JSON serialization example, easier configuration for the Redis cleanup task and &lt;em&gt;lots&lt;/em&gt; of performance improvements and bug fixes. Get it while it&amp;rsquo;s hot!&lt;/li&gt;
  &lt;li&gt;I really dig this post from community hero Michael Simmons on running [Hibernate Search on Pivotal Cloud Foundry with ElasticSearch](&lt;a href="http://info.michael-simons.eu/2016/09/20/running-hibernate-search-with-elasticsearch-on-pivotal-cf/"&gt;http://info.michael-simons.eu/2016/09/20/running-hibernate-search-with-elasticsearch-on-pivotal-cf/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I really liked this talk by Alex Blewitt &lt;a href="https://www.infoq.com/presentations/hotspot-memory-data-structures"&gt;on the internals of Hotspot&lt;/a&gt;. Also: check out his &lt;em&gt;epic&lt;/em&gt; tie!&lt;/li&gt;
  &lt;li&gt;I was very interested to learn about this configuration server from eBay Shanghai, &lt;a href="https://github.com/eBay/YiDB"&gt;called &lt;em&gt;YiDB&lt;/em&gt;&lt;/a&gt;. Might be worth a look!&lt;/li&gt;
  &lt;li&gt;this blog from Riot Games on some of the optimizations they&amp;rsquo;ve &lt;a href="http://engineering.riotgames.com/news/riot-games-api-fulfilling-zuuls-destiny"&gt;made when using Zuul is &lt;em&gt;very&lt;/em&gt; informative&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;this is a &lt;em&gt;very&lt;/em&gt; cool talk &lt;a href="http://dehnes.com/software/2016/09/09/zero-downtime-deplayments-with-database-changes.html"&gt;from JavaZone by Sebastian Dehne&lt;/a&gt; on zero-downtime deployments with database changes.&lt;/li&gt;
  &lt;li&gt;speaking of, there is a &lt;em&gt;very&lt;/em&gt; cool &lt;a href="https://github.com/spring-cloud/spring-cloud-netflix/issues/1290#issuecomment-246707450"&gt;thread in the Spring Cloud Netflix Github Issues on using Eureka for 0-downtime blue/green deployments&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://mail.openjdk.java.net/pipermail/jdk9-dev/2016-September/004887.html"&gt;Java 9 will, unfortunately, be delayed 4 months&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I dig this look at edge &lt;a href="https://tech.knewton.com/blog/tag/rate-limiting/"&gt;service choices and - in particular - at the look at Netflix Zuul filters&lt;/a&gt; which you can of course use with Spring Cloud Netflix&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring for Apache Kafka 1.1 GA and Spring Integration Kafka 2.1 GA are Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/19/spring-for-apache-kafka-1-1-ga-and-spring-integration-kafka-2-1-ga-are-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2016-09-19:2622</id>
    <updated>2016-09-19T19:13:25Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I am pleased to announce that the Spring for Apache Kafka 1.1.0.RELEASE is now available in the &lt;a href="https://repo.spring.io/release"&gt;spring release repo&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cspring-kafka"&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Due to some community requirements, we decided to bypass the Release Candidate (RC) phase and released General Availability (GA) immediately.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;There are not many changes since the previous &lt;a href="https://spring.io/blog/2016/09/08/spring-for-apache-kafka-1-1-0-milestone-2-available"&gt;Milestone 2&lt;/a&gt;, but here is a summary of all Spring Kafka 1.1 changes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apache Kafka &lt;code&gt;0.10&lt;/code&gt; upgrade;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The batch of messages support via &lt;code&gt;BatchMessageListener&lt;/code&gt; as well as via &lt;code&gt;@KafkaListener&lt;/code&gt; annotation configuration;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;null payload&lt;/code&gt; concept support via &lt;code&gt;KafkaNull&lt;/code&gt; placeholder object;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can now perform seek operations from the listener - this allows setting an initial offset when partitions are assigned by Kafka when using group management.
You can also perform arbitrary seek operations after initialization;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow setting the initial offset to be relative to the current offset;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;KafkaTemplate&lt;/code&gt; now provides access to the &lt;code&gt;metrics&lt;/code&gt; and &lt;code&gt;partitionsFor&lt;/code&gt; methods on the &lt;code&gt;Producer&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; has been switched to the &lt;code&gt;1.1.1&lt;/code&gt; version for immediate maintenance reaction.
Also we are going to start version &lt;code&gt;1.2&lt;/code&gt; soon enough. Our plans are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;providing first class support for KStreams;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;implementing Spring Boot infrastructure;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;providing solution for some interesting community &lt;a href="https://github.com/spring-projects/spring-kafka/issues"&gt;requests&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;spring-integration-kafka&lt;/code&gt; version &lt;code&gt;2.1.0.RELEASE&lt;/code&gt;, fully based on the Spring Kafka &lt;code&gt;1.1&lt;/code&gt; is available, too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As usual, don&amp;#8217;t hesitate to reach us with any questions, feedback or contribution, at last!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-kafka/"&gt;Project Page&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-kafka/reference/html/"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-kafka/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-kafka"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Integration 4.3.2 is Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/19/spring-integration-4-3-2-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2016-09-19:2624</id>
    <updated>2016-09-19T19:06:49Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce that Spring Integration maintenance version &lt;code&gt;4.3.2&lt;/code&gt; has been released.
It is available in the &lt;a href="https://repo.spring.io/release"&gt;spring release repo&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cspring-integration-bom"&gt;Maven Central&lt;/a&gt;.
It&amp;#8217;s strongly recommended for everyone to upgrade because of the bug fixes and improvements contained in the release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;While you can find all the changes for &lt;code&gt;4.3.2&lt;/code&gt; in its &lt;a href="https://jira.spring.io/jira/secure/ReleaseNote.jspa?projectId=10121&amp;amp;version=15696"&gt;Release Notes&lt;/a&gt;, here are some highlights:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It is a foundation for upcoming Spring Boot 1.4.1;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;RmiOutboundGateway&lt;/code&gt; now can be supplied with &lt;code&gt;RmiProxyFactoryBeanConfigurer&lt;/code&gt; to get access to underlying &lt;code&gt;RmiProxyFactoryBean&lt;/code&gt; for customization, e.g. &lt;code&gt;ContextPropagatingRemoteInvocationFactory&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added &lt;code&gt;TcpConnectionFailedEvent&lt;/code&gt; - An event emitted when a connection could not be established for some reason;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;spring.integration.readOnly.headers&lt;/code&gt; global integration property to let to exclude some headers from replying, e.g. undesired or incompatible &lt;code&gt;contentType&lt;/code&gt;, populated by some transformers by default.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Right now we are busy with Spring Integration &lt;code&gt;5.0&lt;/code&gt; and hope to have some Milestone 1 over a month or so with some Reactive Streams effort and absorbed &lt;a href="https://spring.io/blog/2016/09/15/java-dsl-for-spring-integration-1-2-milestone-2-is-available"&gt;Spring Integration Java DSL&lt;/a&gt; for Java 8 code base.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Thanks everyone for their contribution.
Looking forward for more!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-integration/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://jira.spring.io/browse/INT"&gt;JIRA&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md"&gt;Contributions&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Framework 4.3.3 and 4.2.8 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/19/spring-framework-4-3-3-and-4-2-8-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2016-09-19:2623</id>
    <updated>2016-09-19T16:19:49Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am happy to announce that the Spring Framework &lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10000&amp;version=15697"&gt;4.3.3&lt;/a&gt; and &lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10000&amp;version=15596"&gt;4.2.8&lt;/a&gt; maintenance releases &lt;a href="http://projects.spring.io/spring-framework"&gt;are available now&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This third maintenance release of the 4.3 line contains over 60 fixes and improvements and is the base for the upcoming Spring Boot 1.4.1 release later this week. We&amp;rsquo;ll also release another Spring Framework 5.0 milestone Wednesday so stay tuned for more release announcements!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-framework/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-framework"&gt;GitHub&lt;/a&gt; | &lt;a href="https://jira.spring.io/browse/SPR"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/htmlsingle/"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow 1.1 M1  and 1.0.1 GA released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/16/spring-cloud-data-flow-1-1-m1-and-1-0-1-ga-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Thomas Risberg</name>
    </author>
    <id>tag:spring.io,2016-09-16:2620</id>
    <updated>2016-09-16T13:50:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am excited to announce the release of the first milestone of Spring Cloud Data Flow 1.1 along with a 1.0.1 maintenance release for the 1.0 version. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; A great way to start using this new release(s) is to follow the &lt;a href="http://cloud.spring.io/spring-cloud-dataflow/#spring-cloud-data-flow-server-implementations"&gt;release matrix&lt;/a&gt; on the project page, which includes the download coordinates and the links to the reference guide.&lt;/p&gt;&lt;h2&gt;&lt;a href="#1-1-m1-release" class="anchor" name="1-1-m1-release"&gt;&lt;/a&gt;1.1 M1 release&lt;/h2&gt;
&lt;p&gt;Over the last few weeks, we have added new features and improvements to the overall orchestration of data microservices. The following new features were included in the 1.1.0.M1 release: &lt;/p&gt;&lt;h3&gt;&lt;a href="#security" class="anchor" name="security"&gt;&lt;/a&gt;Security&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Adds &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.M1/reference/html/getting-started-security.html#getting-started-security-ldap-authentication"&gt;LDAP backend-authentication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Adds &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.M1/reference/html/getting-started-security.html#getting-started-security-basic-authentication"&gt;Basic backend-authentication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Adds &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.M1/reference/html/getting-started-security.html#getting-started-security-file-based-authentication"&gt;File backend-authentication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Improvements to &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.M1/reference/html/getting-started-security.html#getting-started-security-ldap-authentication"&gt;OAUTH backed-authentication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-boot-1-3-x-and-1-4-x-compatibility" class="anchor" name="spring-boot-1-3-x-and-1-4-x-compatibility"&gt;&lt;/a&gt;Spring Boot 1.3.x and 1.4.x Compatibility&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Adds backward compatibility for “&lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.M1/reference/html/spring-cloud-dataflow-register-apps.html#spring-cloud-dataflow-stream-app-whitelisting"&gt;property whitelisting&lt;/a&gt;” to support both Spring Boot 1.3.x and 1.4.x applications&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#ui-improvements" class="anchor" name="ui-improvements"&gt;&lt;/a&gt;UI improvements&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Builds upon &lt;a href="https://github.com/spring-projects/spring-flo/releases/tag/v0.5.1"&gt;0.5.1&lt;/a&gt; release of Spring Flo&lt;/li&gt;
  &lt;li&gt;Adds bulk import and registration of stream and task app-starters&lt;/li&gt;
  &lt;li&gt;Adds Flo’s visual representation of running streams&lt;/li&gt;
  &lt;li&gt;Adds stream deployment progress&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#general" class="anchor" name="general"&gt;&lt;/a&gt;General&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Adds the ability to turn-off analytics infrastructure in entirety&lt;/li&gt;
  &lt;li&gt;Adds REST-Docs infrastructure for core REST-APIs&lt;/li&gt;
  &lt;li&gt;Test coverage improvements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Review the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow/milestone/7?closed=1"&gt;1.1.0.M1 (core)&lt;/a&gt; / &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-ui/milestone/7?closed=1"&gt;1.1.0.M1 (ui)&lt;/a&gt; release markers to learn more about the incremental improvements. &lt;/p&gt;
&lt;p&gt;Looking ahead, we are targeting 1.1 GA release of Spring Cloud Stream and building upon this, Spring Cloud Data Flow would support Apache Kafka’s 0.9/0.10 releases, schema-evolution, and the newly improved reactive-streaming capabilities. Dynamic scaling and auto-rebalancing of stream partitions would be supported as well.&lt;/p&gt;
&lt;p&gt;Likewise, we are targeting 1.1 GA release of Spring Cloud Task with improvements including updates to task partitions, newer database schemas, support for external execution ids, and the improved interoperability between streaming and task pipelines in Spring Cloud Data Flow. &lt;/p&gt;
&lt;p&gt;Look out for significant improvements to UI/UX around Task workflows. Better paging, sorting, monitoring, and search capabilities, including Flo support for “composed tasks” is coming.&lt;/p&gt;&lt;h2&gt;&lt;a href="#1-0-1-ga-release" class="anchor" name="1-0-1-ga-release"&gt;&lt;/a&gt;1.0.1 GA release&lt;/h2&gt;
&lt;p&gt;The 1.0.1 release builds upon 1.0.2.RELEASE of Spring Cloud Task, bug-fixes and documentation improvements. &lt;/p&gt;
&lt;p&gt;Review the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow/milestone/5?closed=1"&gt;1.0.1.RELEASE release marker&lt;/a&gt; to learn more about the incremental improvements. &lt;/p&gt;&lt;h2&gt;&lt;a href="#upcoming-webinar" class="anchor" name="upcoming-webinar"&gt;&lt;/a&gt;Upcoming webinar&lt;/h2&gt;
&lt;p&gt;Tune-in to “&lt;a href="https://spring.io/blog/2016/09/13/webinar-data-microservices-in-the-cloud"&gt;Data Microservices in the Cloud&lt;/a&gt;” webinar scheduled on 9/29/2016 to learn more about Spring Cloud Data Flow and the incremental improvements.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Java DSL for Spring Integration 1.2 Milestone 2 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/15/java-dsl-for-spring-integration-1-2-milestone-2-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2016-09-15:2619</id>
    <updated>2016-09-15T19:28:07Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce that the Java DSL for Spring Integration &lt;code&gt;1.2 M2&lt;/code&gt; is available now!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;First of all I’d like to thank everyone who created issues, raised Pull Requests, provided feedback or just asked questions on StackOverflow.
Especial thanks for early adopters since the previous &lt;a href="https://spring.io/blog/2016/07/08/java-dsl-for-spring-integration-1-2-m1-and-1-1-3-are-available"&gt;Milestone 1&lt;/a&gt;.
With their help we have improved and fixed some issues with runtime flow registration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The artifact &lt;code&gt;org.springframework.integration:spring-integration-java-dsl:1.2.0.M2&lt;/code&gt; is available in the &lt;a href="http://repo.spring.io/milestone"&gt;Milestone repo&lt;/a&gt;.
So, give it a shot and don&amp;#8217;t hesitate to raise a &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/issues"&gt;GH issue&lt;/a&gt; for any feedback!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Some highlights of the current iteration:&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="jpa-support" class="sect0"&gt;&lt;a class="anchor" href="#jpa-support"&gt;&lt;/a&gt;JPA support&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;After many Community requests we finally introduced the &lt;code&gt;Jpa&lt;/code&gt; Factory and corresponding `IntegrationComponentSpec`s to provide a fluent API for the &lt;a href="http://docs.spring.io/spring-integration/reference/html/jpa.html"&gt;Spring Integration JPA&lt;/a&gt; components:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Autowired
private EntityManagerFactory entityManagerFactory;

@Bean
public IntegrationFlow pollingAdapterFlow() {
    return IntegrationFlows
            .from(Jpa.inboundAdapter(this.entityManagerFactory)
                    .entityClass(StudentDomain.class)
                    .maxResults(1)
                    .expectSingleResult(true),
                e -&amp;gt; e.poller(p -&amp;gt; p.trigger(new OnlyOnceTrigger())))
            .channel(c -&amp;gt; c.queue("pollingResults"))
            .get();
}

@Bean
public IntegrationFlow updatingGatewayFlow() {
    return f -&amp;gt; f
            .handle(Jpa.updatingGateway(this.entityManagerFactory),
                    e -&amp;gt; e.transactional(true))
            .channel(c -&amp;gt; c.queue("persistResults"));
}

@Bean
public IntegrationFlow retrievingGatewayFlow() {
    return f -&amp;gt; f
            .handle(Jpa.retrievingGateway(this.entityManagerFactory)
                    .jpaQuery("from Student s where s.id = :id")
                    .expectSingleResult(true)
                    .parameterExpression("id", "payload"))
            .channel(c -&amp;gt; c.queue("retrieveResults"));
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id="mid-flow-transaction-support" class="sect0"&gt;&lt;a class="anchor" href="#mid-flow-transaction-support"&gt;&lt;/a&gt;Mid-flow transaction support&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;"Inspired" by the complexity of transaction support configuration for the Spring Integration JPA components (actually programmatic &lt;code&gt;TransactionalInterceptor&lt;/code&gt;), we have introduced &lt;code&gt;TransactionInterceptorBuilder&lt;/code&gt;.
In addition we provide the &lt;code&gt;TransactionHandleMessageAdvice&lt;/code&gt; which allows to start transaction from any endpoint for the entire sub-flow, not only the &lt;code&gt;handleRequestMessage&lt;/code&gt; as it is in case of regular &lt;code&gt;ConsumerEndpointSpec.advice()&lt;/code&gt;.
Actually the main trick is done by the &lt;code&gt;HandleMessageAdvice&lt;/code&gt;, recently introduced in &lt;a href="http://docs.spring.io/spring-integration/reference/html/messaging-endpoints-chapter.html#handle-message-advice"&gt;Spring Integration Core&lt;/a&gt;, which is a marker interface to distinguish advice for the &lt;code&gt;handleRequestMessage&lt;/code&gt; only or for the flow starting from the current &lt;code&gt;MessageHandler&lt;/code&gt;.
For convenience the bunch of &lt;code&gt;.transactional()&lt;/code&gt; methods have been added to the &lt;code&gt;ConsumerEndpointSpec&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="scatter-gather-support" class="sect0"&gt;&lt;a class="anchor" href="#scatter-gather-support"&gt;&lt;/a&gt;Scatter-Gather support&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;a href="http://docs.spring.io/spring-integration/reference/html/messaging-routing-chapter.html#scatter-gather"&gt;Scatter-Gather&lt;/a&gt; EI pattern now has its own Java DSL API:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Bean
public IntegrationFlow scatterGatherFlow() {
    return f -&amp;gt; f
      .scatterGather(scatterer -&amp;gt; scatterer
         .applySequence(true)
         .recipientFlow(m -&amp;gt; true,
                     sf -&amp;gt; sf.handle((p, h) -&amp;gt; Math.random() * 10))
         .recipientFlow(m -&amp;gt; true,
                     sf -&amp;gt; sf.handle((p, h) -&amp;gt; Math.random() * 10))
         .recipientFlow(m -&amp;gt; true,
                     sf -&amp;gt; sf.handle((p, h) -&amp;gt; Math.random() * 10)),
      gatherer -&amp;gt; gatherer
         .releaseStrategy(group -&amp;gt;
                group.size() == 3 ||
                      group.getMessages()
                          .stream()
                          .anyMatch(m -&amp;gt; (Double) m.getPayload() &amp;gt; 5)),
      scatterGather -&amp;gt; scatterGather
        	 .gatherTimeout(10_000));
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Where the &lt;code&gt;scatterer&lt;/code&gt; is just a &lt;code&gt;RecipientListRouter&lt;/code&gt;, &lt;code&gt;gatherer&lt;/code&gt; - an &lt;code&gt;AggregatingMessageHandler&lt;/code&gt;, and the last &lt;code&gt;Consumer&lt;/code&gt; accept options for the &lt;code&gt;ScatterGatherHandler&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="more-routers-improvements" class="sect0"&gt;&lt;a class="anchor" href="#more-routers-improvements"&gt;&lt;/a&gt;More routers improvements&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;.routeToRecipients()&lt;/code&gt; API now provides more configuration variants for recipients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;.routeToRecipients(r -&amp;gt; r
    .recipient("foo-channel", "'foo' == payload")
    .recipient("bar-channel", m -&amp;gt;
        m.getHeaders().containsKey("recipient")
            &amp;amp;&amp;amp; (boolean) m.getHeaders().get("recipient"))
    .recipientFlow("'foo' == payload or 'bar' == payload or 'baz' == payload",
        f -&amp;gt; f.&amp;lt;String, String&amp;gt;transform(String::toUpperCase)
            .channel(c -&amp;gt; c.queue("recipientListSubFlow1Result")))
    .recipientFlow((String p) -&amp;gt; p.startsWith("baz"),
        f -&amp;gt; f.transform("Hello "::concat)
            .channel(c -&amp;gt; c.queue("recipientListSubFlow2Result")))
    .recipientFlow(new FunctionExpression&amp;lt;Message&amp;lt;?&amp;gt;&amp;gt;(m -&amp;gt;
                                   "bax".equals(m.getPayload())),
        f -&amp;gt; f.channel(c -&amp;gt; c.queue("recipientListSubFlow3Result")))
    .defaultOutputToParentFlow())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Previously the &lt;code&gt;.route()&lt;/code&gt; operator made the next &lt;code&gt;.channel()&lt;/code&gt; in the &lt;code&gt;IntegrationFlow&lt;/code&gt; as a &lt;code&gt;defaultOutputChannel&lt;/code&gt; of the &lt;code&gt;Router&lt;/code&gt;.
According to the user experience that doesn&amp;#8217;t sound reasonable to make such a decision unconditional.
We reworked &lt;code&gt;.route()&lt;/code&gt; to align it with the standard &lt;code&gt;AbstractMessageRouter&lt;/code&gt; behaviour.
The &lt;code&gt;.defaultOutputChannel()&lt;/code&gt; and &lt;code&gt;.defaultSubFlowMapping()&lt;/code&gt; have been added to utilize the &lt;code&gt;default&lt;/code&gt; logic for the &lt;code&gt;Router&lt;/code&gt;.
To rallback to the previous behavior the &lt;code&gt;.defaultOutputToParentFlow()&lt;/code&gt; is present, as you noticed by the &lt;code&gt;.routeToRecipients()&lt;/code&gt; sample above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/commits/v1.2.0.M2"&gt;commit history&lt;/a&gt; for &lt;code&gt;1.2.0.M2&lt;/code&gt; version for more information.
And always read JavaDocs to understand the API you use!&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="next-steps" class="sect0"&gt;&lt;a class="anchor" href="#next-steps"&gt;&lt;/a&gt;Next Steps&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We expect the first (and hope the last) Release Candidate for version &lt;code&gt;1.2&lt;/code&gt; over a couple weeks, after some adoption for Spring Integration 4.3.2 and Spring Boot 1.4.1.
It&amp;#8217;s soon enough as &lt;code&gt;spring-integration-java-dsl&lt;/code&gt; will move to the &lt;a href="http://projects.spring.io/spring-integration/"&gt;Spring Integration Core&lt;/a&gt; &lt;code&gt;5.0&lt;/code&gt; and Java 8 code base.
The current &lt;code&gt;1.2&lt;/code&gt; version will be still supported, but just for bug fixes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-integration-java-dsl"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/wiki/Spring-Integration-Java-DSL-Reference"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Camden RC1 is Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/14/spring-cloud-camden-rc1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Spencer Gibb</name>
    </author>
    <id>tag:spring.io,2016-09-14:2618</id>
    <updated>2016-09-14T16:16:59Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Release Candidate 1 (RC1) of the &lt;a href="https://cloud.spring.io"&gt;Spring Cloud Camden&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="https://repo.spring.io/milestone/"&gt;Spring Milestone&lt;/a&gt; repository. This is mostly a bug fix release as Camden prepares for General Availability (GA). You can check out the Camden &lt;a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Camden-Release-Notes"&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#notable-changes-in-the-camden-release-train" class="anchor" name="notable-changes-in-the-camden-release-train"&gt;&lt;/a&gt;Notable Changes in the Camden Release Train&lt;/h2&gt;
&lt;p&gt;Spring Cloud Contract is a new project that provides support for Consumer Driven Contracts and service schemas in Spring applications. Spring Cloud Netflix supports customization of Ribbon component classes via properties, uses the new community maintained &lt;a href="https://github.com/OpenFeign/feign"&gt;OpenFeign&lt;/a&gt; and made various fixes and improvements to Zuul. Spring Cloud Consul adds support for Spring Cloud Bus using Consul&amp;rsquo;s event api. The CLI adds a &lt;code&gt;spring cloud&lt;/code&gt; command to start various Spring Cloud servers with a single command. Supported servers include Eureka, Config Server and Hystrix Dashboard.&lt;/p&gt;
&lt;p&gt;The following modules were updated as part of Camden.RC1:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Module &lt;/th&gt;
      &lt;th&gt;Version &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Build &lt;/td&gt;
      &lt;td&gt;1.2.0.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Stream &lt;/td&gt;
      &lt;td&gt;Brooklyn.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Bus &lt;/td&gt;
      &lt;td&gt;1.2.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Config &lt;/td&gt;
      &lt;td&gt;1.2.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Netflix &lt;/td&gt;
      &lt;td&gt;1.2.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Consul &lt;/td&gt;
      &lt;td&gt;1.1.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Contract &lt;/td&gt;
      &lt;td&gt;1.0.0.RC1 &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;NOTE: Spring Cloud CLI 1.2.0.RC1 will be released after Spring Boot 1.4.1 is released because of a regression.&lt;/p&gt;
&lt;p&gt;The combined release train documentation is available &lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud/"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloudOSS"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only)&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;&amp;lt;repositories&amp;gt;&#xD;
    &amp;lt;repository&amp;gt;&#xD;
        &amp;lt;id&amp;gt;spring-milestones&amp;lt;/id&amp;gt;&#xD;
        &amp;lt;name&amp;gt;Spring Milestones&amp;lt;/name&amp;gt;&#xD;
        &amp;lt;url&amp;gt;http://repo.spring.io/milestone&amp;lt;/url&amp;gt;&#xD;
        &amp;lt;snapshots&amp;gt;&#xD;
            &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&#xD;
        &amp;lt;/snapshots&amp;gt;&#xD;
    &amp;lt;/repository&amp;gt;&#xD;
&amp;lt;/repositories&amp;gt;&#xD;
&amp;lt;dependencyManagement&amp;gt;&#xD;
  &amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;version&amp;gt;Camden.RC1&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
    &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
  &amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;&#xD;
&amp;lt;dependencies&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  ...&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;buildscript {&#xD;
  dependencies {&#xD;
    classpath &amp;quot;io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE&amp;quot;&#xD;
  }&#xD;
}&#xD;
repositories {&#xD;
    maven {&#xD;
        url &amp;#39;http://repo.spring.io/milestone&amp;#39;&#xD;
    }&#xD;
}&#xD;
apply plugin: &amp;quot;io.spring.dependency-management&amp;quot;&#xD;
&#xD;
dependencyManagement {&#xD;
  imports {&#xD;
    mavenBom &amp;#39;org.springframework.cloud:spring-cloud-dependencies:Camden.RC1&amp;#39;&#xD;
  }&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-eureka&amp;#39;&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Spring Session 1.3.0 M2 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/14/spring-session-1-3-0-m2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-09-14:2617</id>
    <updated>2016-09-14T12:44:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I&amp;#8217;m pleased to announce the release of Spring Session 1.3.0.M2. This release release closes lots of community submitted Pull Requests. For a complete list of changes see the &lt;a href="https://github.com/spring-projects/spring-session/milestone/6?closed=1"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonitionblock note"&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class="icon"&gt;
&lt;div class="title"&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class="content"&gt;
Spring Session 1.3.0.M1 release had some problems, so we followed up with an immediate release of Spring Session 1.3.0.M2
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h1 id="what-s-new-in-spring-session-1-3-0-m2" class="sect0"&gt;&lt;a class="anchor" href="#what-s-new-in-spring-session-1-3-0-m2"&gt;&lt;/a&gt;What’s New in Spring Session 1.3.0 M2&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Highlights include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First Class Support for &lt;a href="http://docs.spring.io/spring-session/docs/1.3.0.M2/reference/html5/#httpsession-hazelcast"&gt;Hazelcast&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First class &lt;a href="http://docs.spring.io/spring-session/docs/1.3.0.M3/reference/html5/#spring-security-concurrent-sessions-how"&gt;Spring Security’s concurrent session management&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-session/tree/1.3.0.M2/samples/httpsession-redis-json"&gt;Redis Sample with GenericJackson2JsonRedisSerializer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.session.cleanup.cron.expression&lt;/code&gt; can be used to override the cleanup task&amp;#8217;s cron expression&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lots of performance improvements and bug fixes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="contributions" class="sect0"&gt;&lt;a class="anchor" href="#contributions"&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Without the community we couldn&amp;#8217;t be the successful project we are today. I&amp;#8217;d like to thank everyone that created issues &amp;amp; provided feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="feedback-please" class="sect0"&gt;&lt;a class="anchor" href="#feedback-please"&gt;&lt;/a&gt;Feedback Please&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you have feedback on this release, I encourage you to reach out via &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;StackOverflow&lt;/a&gt;, &lt;a href="https://github.com/spring-projects/spring-session/issues"&gt;GitHub Issues&lt;/a&gt;, or via the comments section. You can also ping me &lt;a href="https://twitter.com/rob_winch"&gt;@rob_winch&lt;/a&gt; or Joe &lt;a href="https://twitter.com/joe_grandja"&gt;@joe_grandja&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Of course the best feedback comes in the form of &lt;a href="https://github.com/spring-projects/spring-session/blob/1.3.0.M2/CONTRIBUTING.adoc"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-session/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-session/docs/1.3.0.M2/reference/html5/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 13, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/13/this-week-in-spring-september-13-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-09-13:2615</id>
    <updated>2016-09-13T10:30:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It&amp;rsquo;s been an amazing week here in China, hanging out with Alibaba and Huawei, bringing the Spring. This week it&amp;rsquo;s off to Shanghai, Beijing, Guangzhou, Shenzhen and Hong Kong! &lt;/p&gt;
&lt;p&gt;Our pal &lt;a href="http://twitter.com/PieterHumphrey"&gt;Pieter Humphrey&lt;/a&gt; has been busy this week getting the SpringOne Platform 2016 videos up and online for us to enjoy so there&amp;rsquo;s a lot of good stuff this week! Thanks Pieter!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Want see Mark Fisher and Mark Pollack present and live demo their way through Spring Cloud Data Flow on September 29th? &lt;a href="https://spring.io/blog/2016/09/13/webinar-data-microservices-in-the-cloud"&gt;Reserve your seat now!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Want to learn what&amp;rsquo;s new in Spring Framework 4.3? &lt;a href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-modern-java-component-design-with-spring-framework-4-3"&gt;Join Spring framework lead Juergen Hoeller for this look at an awesome framework&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I liked this talk from Home Depot &lt;a href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-12-factor-or-cloud-native-apps-what-exactly-does-that-mean-for-spring-developers"&gt;on what 12 Factor applications means to a Java Developer&lt;/a&gt; and turns out it was one of the top attended at the conference!&lt;/li&gt;
  &lt;li&gt;I gave an almost &lt;em&gt;2 hour&lt;/em&gt; long talk at SpringOne Platform 2016 called &lt;a href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-cloud-native-java"&gt;&lt;em&gt;Cloud Native Java&lt;/em&gt;&lt;/a&gt; covering Spring Boot (REST, HATEOAS, Actuator, JPA), Spring Cloud (centralized configuration, service registration and discovery, circuit breakers, microproxies, API gateways, eventual consistency, stream processing, observability and monitoring, distributed tracing), Spring Cloud Security (OAuth and SSO) and Spring Cloud Data Flow. Get it while it&amp;rsquo;s hot!&lt;/li&gt;
  &lt;li&gt;Join Apache Tomcat ninja Mark Thomas for &lt;a href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-apache-tomcat-roadmap"&gt;a great look at the Apache Tomcat roadmap&lt;/a&gt; in this talk from SpringOne Platform 2016&lt;/li&gt;
  &lt;li&gt;Spring Cloud Task and Spring Batch lead Michael Minella has &lt;a href="https://spring.io/blog/2016/09/09/spring-cloud-task-1-0-3-release-and-1-1-0-m1-are-now-available"&gt;just announced Spring Cloud Task 1.0.3 and 1.1.0.M1 are now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Integration lead Gary Russell has just announced Spring for Apache Kafka 1.1.0 M2, which now supports &lt;a href="https://spring.io/blog/2016/09/08/spring-for-apache-kafka-1-1-0-milestone-2-available"&gt;&lt;em&gt;batching&lt;/em&gt; consumption of messages from a Kafka destination&lt;/a&gt; and seek operations! Get it while it&amp;rsquo;s hot!&lt;/li&gt;
  &lt;li&gt;Spring Cloud Stream lead Marius Bogoevici has just &lt;a href="https://spring.io/blog/2016/09/08/spring-cloud-stream-brooklyn-rc1-is-available"&gt;announced Spring Cloud Stream Brooklyn RC1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Session lead Rob Winch has just announced &lt;a href="https://spring.io/blog/2016/09/07/spring-session-1-2-2-released"&gt;Spring Session 1.2.2 which contains numerous bugfixes and improvements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cool! &lt;a href="https://github.com/cloudfoundry/gorouter/commit/1647c65cf65f712f7597c811cf7f98cfaab9365a"&gt;Instance-specific routing has just landed in Cloud Foundry&amp;rsquo;s &lt;code&gt;gorouter&lt;/code&gt;&lt;/a&gt;! This is &lt;em&gt;ideal&lt;/em&gt; for instance-specific Spring Boot actuator endpoints!&lt;/li&gt;
  &lt;li&gt;I like this &lt;a href="http://www.huangyunkun.com/2016/08/30/spring-retry/"&gt;Chinese-language introduction to Spring Retry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Want to hack together a poor-man&amp;rsquo;s authorization server with Spring Session? &lt;a href="https://beku8.wordpress.com/2016/09/12/configuring-cross-domain-sso-and-slo-with-spring-security-and-spring-session/"&gt;This is a pretty good introduction!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://yq.aliyun.com/articles/60165"&gt;I loved this blog introducing Spring Cloud Sleuth and Zipkin support on Aliyun&amp;rsquo;s blog&lt;/a&gt;. Aliyun, for those not aware, is like AWS to Alibaba.com&amp;rsquo;s Amazon. This is super cool!&lt;/li&gt;
  &lt;li&gt;Our former CTO Adrian Coyler has a great article on his Blog &amp;ldquo;The Morning Paper&amp;rdquo; on handling &lt;a href="https://blog.acolyer.org/2016/09/13/data-on-the-outside-versus-data-on-the-inside/"&gt;data in microservice architecture&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Webinar: Data Microservices in the Cloud</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/13/webinar-data-microservices-in-the-cloud" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-13:2616</id>
    <updated>2016-09-13T10:28:00Z</updated>
    <content type="html">&lt;p&gt;Speakers: Mark Pollack, Mark Fisher&lt;br/&gt;Spring Cloud Data Flow enables you to create data pipelines for many common use-cases such as data ingestion, real-time analytics and data import/export.&lt;br/&gt;In this webinar, we will introduce Spring Cloud Data Flow’s architecture and walk through the orchestration capabilities of long-running and short-lived data-centric applications on multiple runtime platforms such as Cloud Foundry, Kubernetes, Apache Mesos and Apache YARN.&lt;br/&gt;Spring Cloud Data Flow represents the evolution of Spring XD and retains the DSL to define data pipelines as well as the web based UI designer, but changes the component model from modules that used to run inside a container to standard Spring Boot applications built with Spring Cloud Stream and Spring Cloud Task APIs.&lt;/p&gt;
&lt;p&gt;Date: Thursday, September 29, 2016&lt;br/&gt;Time: 7:00am PDT / 2:00pm GMT / 3:00pm CET&lt;br/&gt;&lt;a href="http://connect.pivotal.io/OSS_Webinar_7AM-Data-Microservices-in-the-Cloud_Q316_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thursday, September 29&lt;br/&gt;10:00AM PDT&lt;br/&gt;(San Francisco, GMT-07:00)&lt;br/&gt;&lt;a href="http://connect.pivotal.io/OSS_Webinar_10AMDataMicroservicesintheCloud_Q316_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: 12 Factor, or Cloud Native Apps: What EXACTLY Does that Mean for Spring Developers?</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-12-factor-or-cloud-native-apps-what-exactly-does-that-mean-for-spring-developers" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-12:2614</id>
    <updated>2016-09-12T15:46:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Thomas Gamble, Home Depot&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/Pivotal/12-factor-or-cloud-native-apps-what-exactly-does-that-mean-for-spring-developers-64853692"&gt;http://www.slideshare.net/Pivotal/12-factor-or-cloud-native-apps-what-exactly-does-that-mean-for-spring-developers-64853692&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Your team is excited about getting started with Spring Boot and Cloud Native, but you&amp;rsquo;re not entirely sure you&amp;rsquo;re ready to have the team continuously delivering to prod using cf push from their local desktops. The freedom of cloud native development can be very empowering for developers, but it shouldn&amp;rsquo;t be something that terrifies the operations and security teams. We&amp;rsquo;ll discuss how you can setup a fast and reliable deployment process, as well as some interesting things to thing about in the future. One of the most well known descriptions of these new paradigms is the Twelve Factor App (12factor.net), which describes elements of cloud native applications. Many of these needs are squarely met through the Spring Framework, others require support from other systems. In this session we will examine each of the twelve factors and present how Spring, and platforms such as Cloud Foundry satisfy them, and in some cases we’ll even suggest that responsibility should shift from Spring to platforms. At the conclusion you will understand what is needed for cloud‐native applications, why and how to deliver on those requirements.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/t2zfJBc1SeE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Cloud Native Java</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-cloud-native-java" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-12:2613</id>
    <updated>2016-09-12T14:02:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/cloud-native-java"&gt;http://www.slideshare.net/SpringCentral/cloud-native-java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;It is not necessary to change. Survival is not mandatory.” -W. Edwards Deming&lt;/p&gt;
&lt;p&gt;Work takes time to flow through an organization and ultimately be deployed to production where it captures value. It’s critical to reduce time-to-production. Software - for many organizations and industries - is a competitive advantage. Organizations break their larger software ambitions into smaller, independently deployable, feature -centric batches of work - microservices. In order to reduce the round-trip between stations of work, organizations collapse or consolidate as much of them as possible and automate the rest; developers and operations beget “devops,” cloud-based services and platforms (like Cloud Foundry) automate operations work and break down the need for ITIL tickets and change management boards. But velocity, for velocity’s sake, is dangerous. Microservices invite architectural complexity that few are prepared to address. In this talk, we’ll look at how high performance organizations like Ticketmaster, Alibaba, and Netflix make short work of that complexity with Spring Boot and Spring Cloud.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/5q8B6lYhFvE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Modern Java Component Design with Spring Framework 4.3</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-modern-java-component-design-with-spring-framework-4-3" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-12:2612</id>
    <updated>2016-09-12T13:37:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Jüergen Hoeller&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/modern-java-component-design-with-spring-framework-43"&gt;http://www.slideshare.net/SpringCentral/modern-java-component-design-with-spring-framework-43&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring&amp;rsquo;s programming and configuration model has a strong design philosophy with respect to application components and configuration artifacts. Spring&amp;rsquo;s annotation-based component story is fine-tuned for source code readability as well as consistency across an entire application&amp;rsquo;s codebase. This session presents selected Spring Framework 4 component model highlights, with a focus on the current Spring Framework 4.3 and a selection of Java 8 enabled features, illustrated with many code examples and noteworthy design considerations.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/8Uyut8JjH34" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Apache Tomcat Roadmap</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/12/springone-platform-2016-replay-apache-tomcat-roadmap" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-12:2610</id>
    <updated>2016-09-12T12:46:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Mark Thomas&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/apache-tomcat-roadmap"&gt;http://www.slideshare.net/SpringCentral/apache-tomcat-roadmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Development of Apache Tomcat continues at a strong pace. This presentation will cover:&lt;br/&gt;Future development plans (features, timing)&lt;br/&gt;Current work&lt;br/&gt;Overview of new features available now in Tomcat 9 / Tomcat 8.5&lt;br/&gt; - SNI&lt;br/&gt; - OpenSSL based TLS&lt;br/&gt; - OAuth (via JASPIC)&lt;br/&gt;Why do we need Tomcat 8.5?&lt;br/&gt;Migrating from older versions&lt;br/&gt;End-of-life plans for older versions&lt;br/&gt;Progress towards a Servlet 4.0 implementation&lt;/p&gt;
&lt;p&gt;As a result of attending this presentation, the audience will gain an understanding of the new features available now or soon to be available in Tomcat 9 and how they can best utilize these features in their applications.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/n6vLfVQGBBQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Task 1.0.3.RELEASE and 1.1.0.M1 are now available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/09/spring-cloud-task-1-0-3-release-and-1-1-0-m1-are-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Michael Minella</name>
    </author>
    <id>tag:spring.io,2016-09-09:2609</id>
    <updated>2016-09-09T18:43:04Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce that Spring Cloud Task 1.0.3.RELEASE and 1.1.0.M1 are now available via Maven Central, Github and the Pivotal download repository. Many thanks to all of those who contributed to this release.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-new-in-spring-cloud-task-1-0-3-release" class="anchor" name="what-rsquo-s-new-in-spring-cloud-task-1-0-3-release"&gt;&lt;/a&gt;What&amp;rsquo;s new in Spring Cloud Task 1.0.3.RELEASE&lt;/h2&gt;
&lt;p&gt;1.0.3.RELEASE represents the next minor release for the 1.0.x branch. It&amp;rsquo;s a minor update that cleans up the dependency management within the project to be in alignment with how the rest of the Spring Cloud portfolio manages it&amp;rsquo;s dependencies.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-new-in-spring-cloud-task-1-1-0-m1" class="anchor" name="what-rsquo-s-new-in-spring-cloud-task-1-1-0-m1"&gt;&lt;/a&gt;What&amp;rsquo;s new in Spring Cloud Task 1.1.0.M1&lt;/h2&gt;
&lt;p&gt;Spring Cloud Task 1.1.0&amp;rsquo;s main theme is to improve overall support of task functionality and continue to migrate features that were found in Spring XD&amp;rsquo;s containers for batch jobs to Spring Cloud Task. The main updates for this release are the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Updated error message handling&lt;/em&gt; - This release adds a new column to the &lt;code&gt;TASK_EXECUTION&lt;/code&gt; table, &lt;code&gt;ERROR_MESSAGE&lt;/code&gt;. This new column will be where any exception that is thrown causing the failure of a task to be recorded (this is changed from the &lt;code&gt;EXIT_MESSAGE&lt;/code&gt; field in previous versions). This change allows for the &lt;code&gt;EXIT_MESSAGE&lt;/code&gt; field to be better utilized for orchestration of tasks.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Improved options for customizing the launch of partitioned job workers&lt;/em&gt; - When using the &lt;code&gt;DeployerPartitionHandler&lt;/code&gt;, 1.1.0 now provides abstractions around customizing the environment variables and command line arguments on a per partition basis. This is an improvement of the all or nothing option available in the 1.0.x branch.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-next" class="anchor" name="what-rsquo-s-next"&gt;&lt;/a&gt;What&amp;rsquo;s next&lt;/h2&gt;
&lt;p&gt;Spring Cloud Task 1.1.0 is expected to be GA before the end of the year in line with Spring Cloud Data Flow 1.1.0. Between now and then, we&amp;rsquo;ll be refining the partitioning model as well as adding additional capabilities to better integrate with Spring Cloud Data Flow.&lt;/p&gt;
&lt;p&gt;We look forward to your feedback on these new features in &lt;a href="https://github.com/spring-cloud/spring-cloud-task/issues"&gt;Github&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring-cloud-task"&gt;StackOverflow&lt;/a&gt;, or to me directly via Twitter &lt;a href="https://twitter.com/michaelminella"&gt;@michaelminella&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.spring.io/spring-cloud-task/"&gt;Spring Cloud Task Home&lt;/a&gt; | &lt;a href="https://github.com/spring-cloud/spring-cloud-task"&gt;Source on GitHub&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-cloud-task/current/reference/htmlsingle/"&gt;Reference Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring for Apache Kafka 1.1.0 Milestone 2 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/08/spring-for-apache-kafka-1-1-0-milestone-2-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2016-09-08:2607</id>
    <updated>2016-09-08T14:13:49Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I am pleased to announce that the second milestone for Spring for Apache Kafka version 1.1.0.M2 is now available in the &lt;a href="https://repo.spring.io/milestone"&gt;spring milestone repo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This includes some bug fixes and the following new features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The ability to process a batch of messages (&lt;a href="https://spring.io/blog/2016/08/23/spring-for-apache-kafka-1-1-0-milestone-1-available"&gt;introduced in the last milestone&lt;/a&gt;) is now available when using the &lt;code&gt;@KafkaListener&lt;/code&gt; annotation, for example&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@KafkaListener(id = "list", topics = "myTopic",
                          containerFactory = "batchFactory")
public void listen(List&amp;lt;String&amp;gt; list) {
    ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can now perform seek operations from the listener - this allows setting an initial offset when partitions are assigned by Kafka when using group management.
You can also perform arbitrary seek operations after initialization.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;KafkaTemplate&lt;/code&gt; now provides access to the &lt;code&gt;metrics&lt;/code&gt; and &lt;code&gt;partitionsFor&lt;/code&gt; methods on the &lt;code&gt;Producer&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In addition, the first milestone of &lt;code&gt;spring-integration-kafka&lt;/code&gt; version 2.1 is now available, utilizing the &lt;code&gt;spring-kafka&lt;/code&gt; 1.1.0.M2 version.
It also supports batch payloads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See the &lt;a href="http://projects.spring.io/spring-kafka/"&gt;project page&lt;/a&gt; for links to documentation and more information.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Stream Brooklyn.RC1 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/08/spring-cloud-stream-brooklyn-rc1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marius Bogoevici</name>
    </author>
    <id>tag:spring.io,2016-09-08:2608</id>
    <updated>2016-09-08T13:59:36Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce the release of the first release candidate of the &lt;a href="http://cloud.spring.io/spring-cloud-stream"&gt;Spring Cloud Stream&lt;/a&gt; Brooklyn release train. Spring Cloud Stream Brooklyn.RC1 is available for use in the &lt;a href="http://repo.spring.io/libs-milestone-local/org/springframework/cloud/spring-cloud-stream-dependencies/Brooklyn.RC1"&gt;Spring Milestone repository&lt;/a&gt;, a detailed description of its features can be found in the &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.RC1/reference/htmlsingle/"&gt;reference documentation&lt;/a&gt;. Release notes are available &lt;a href="https://github.com/spring-cloud/spring-cloud-stream-starters/wiki/Brooklyn-Release-Notes"&gt;here&lt;/a&gt; and include important information on the migration path.&lt;/p&gt;
&lt;p&gt;As this release follows closely the previous &lt;a href="https://spring.io/blog/2599-spring-cloud-stream-brooklyn-m1-is-available/edit"&gt;milestone release&lt;/a&gt; it contains a small number of fixes, and one major addition, which is support for Kafka 0.10 via &lt;a href="http://docs.spring.io/spring-cloud-stream/docs/Brooklyn.RC1/reference/htmlsingle/#_using_the_binder_with_apache_kafka_0_10"&gt;drop-in dependency replacement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We plan to have a general availability release in the next couple of weeks. &lt;/p&gt;
&lt;p&gt;Due to the timeline, the following features (which were intended for 1.1.0.RELEASE) will be deferred to version 1.2 (development on which will start soon after the GA release):&lt;br/&gt;- add support for Reactive binders (including reactive producers and consumers, such as the ones introduced by the &lt;a href="https://github.com/reactor/reactor-kafka"&gt;Reactor Kafka&lt;/a&gt; project);&lt;br/&gt;- add support for developing applications using the &lt;a href="http://kafka.apache.org/documentation.html#streams"&gt;Kafka Stream API&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either in &lt;a href="https://github.com/spring-cloud/spring-cloud-stream"&gt;GitHub&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud-stream"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/springcloudoss"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Session 1.2.2 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/07/spring-session-1-2-2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-09-07:2606</id>
    <updated>2016-09-07T19:36:01Z</updated>
    <content type="html">&lt;p&gt;I&amp;rsquo;m pleased to announce the release of Spring Session 1.2.2.RELEASE. &lt;a href="https://github.com/spring-projects/spring-session/issues?q=milestone%3A1.2.2"&gt;This release contains&lt;/a&gt; numerous bug fixes and trivial enhancements. Some of the highlights include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fixes and improvements for supporting &lt;a href="http://docs.spring.io/spring-session/docs/current/reference/html5/#httpsession-multi"&gt;multiple sessions&lt;/a&gt; in the same browser when working with Tomcat 8.5 &lt;a href="https://github.com/spring-projects/spring-session/issues/605"&gt;#605&lt;/a&gt; &lt;a href="https://github.com/spring-projects/spring-session/issues/611"&gt;#611&lt;/a&gt; &lt;a href="https://github.com/spring-projects/spring-session/issues/615"&gt;#615&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Improvements for JDBC support to work with DB2 &lt;a href="https://github.com/spring-projects/spring-session/pull/600"&gt;#600&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-session/issues/594"&gt;Unregistered GemFire Instantiator causes deserialization issues on app restarts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-session/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-session/docs/current/reference/html5/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;Help&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
</feed>
